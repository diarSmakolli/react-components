'use client'

import {
  Box,
  Flex,
  Text,
  IconButton,
  Button,
  Stack,
  Collapse,
  Icon,
  Popover,
  PopoverTrigger,
  PopoverContent,
  useColorModeValue,
  useBreakpointValue,
  useDisclosure,
  Image,
  Modal,
  ModalOverlay,
  ModalContent,
  ModalHeader,
  ModalCloseButton,
  ModalBody,
  ModalFooter,
} from '@chakra-ui/react'
import {
  HamburgerIcon,
  CloseIcon,
  ChevronDownIcon,
  ChevronRightIcon,
} from '@chakra-ui/icons';
import { ColorModeSwitcher } from '../../ColorModeSwitcher';
import { useState } from 'react';
import { useLocation } from 'react-router-dom'; // Import useLocation from react-router-dom

export default function WithSubnavigation() {
  const { isOpen, onToggle } = useDisclosure();

  const location = useLocation(); // Get the current location


  const [languageModalIsOpen, setLanguageModalIsOpen] = useState(false);
  const openLanguageModal = () => setLanguageModalIsOpen(true);
  const closeLanguageModal = () => setLanguageModalIsOpen(false);

  const languageCode = location.pathname.substring(1);
  const successBgColor = useColorModeValue('black', 'black');
  const successTextColor = useColorModeValue('white', 'white');
  const failTextColor = useColorModeValue('black', 'black');
  const failBgColor = useColorModeValue('white', 'white');

  const hamburgercolor = useColorModeValue('white', 'black');


  return (
    <Box >
      <Flex
        bg={useColorModeValue('transparent', 'transparent')}
        color={useColorModeValue('white', 'gray.600')}
        minH={'60px'}
        py={{ base: 2 }}
        px={{ base: 4 }}
        borderBottom={0}
        borderStyle={'solid'}
        borderColor={useColorModeValue('gray.200', 'gray.900')}
        align={'center'}>
        <Flex
          flex={{ base: 1, md: 'auto' }}
          ml={{ base: -2 }}
          display={{ base: 'flex', md: 'none' }}>
          <Box mt={1}>
              <svg width="170" height="32" viewBox="0 0 200 32" fill="none" xmlns="http://www.w3.org/2000/svg"><path d="M7.2 31.48C5.78667 31.48 4.53333 31.2267 3.44 30.72C2.37333 30.1867 1.53333 29.4667 0.92 28.56C0.306667 27.6267 2.98023e-08 26.56 2.98023e-08 25.36C2.98023e-08 24.2133 0.24 23.1867 0.72 22.28C1.22667 21.3467 2 20.56 3.04 19.92C4.10667 19.28 5.44 18.8267 7.04 18.56L15.04 17.24V20.36L7.88 21.56C6.49333 21.8 5.48 22.24 4.84 22.88C4.22667 23.52 3.92 24.3067 3.92 25.24C3.92 26.12 4.26667 26.8533 4.96 27.44C5.68 28.0267 6.57333 28.32 7.64 28.32C9 28.32 10.1733 28.04 11.16 27.48C12.1733 26.8933 12.96 26.1067 13.52 25.12C14.1067 24.1333 14.4 23.04 14.4 21.84V16.36C14.4 15.1867 13.96 14.24 13.08 13.52C12.2267 12.7733 11.0933 12.4 9.68 12.4C8.45333 12.4 7.36 12.72 6.4 13.36C5.46667 13.9733 4.77333 14.8 4.32 15.84L1.08 14.16C1.48 13.1733 2.12 12.2933 3 11.52C3.88 10.72 4.90667 10.0933 6.08 9.64C7.25333 9.18667 8.48 8.96 9.76 8.96C11.4133 8.96 12.8667 9.28 14.12 9.92C15.3733 10.5333 16.3467 11.4 17.04 12.52C17.76 13.6133 18.12 14.8933 18.12 16.36V31H14.48V26.92L15.16 27.16C14.7067 28.0133 14.0933 28.76 13.32 29.4C12.5467 30.04 11.64 30.5467 10.6 30.92C9.56 31.2933 8.42667 31.48 7.2 31.48ZM32.2572 31.24C30.1505 31.24 28.5239 30.64 27.3772 29.44C26.2572 28.24 25.6972 26.5467 25.6972 24.36V13H21.7772V9.44H22.5772C23.5372 9.44 24.2972 9.14667 24.8572 8.56C25.4172 7.97333 25.6972 7.2 25.6972 6.24V4.48H29.4172V9.44H34.2572V13H29.4172V24.24C29.4172 24.96 29.5239 25.5867 29.7372 26.12C29.9772 26.6533 30.3639 27.08 30.8972 27.4C31.4305 27.6933 32.1372 27.84 33.0172 27.84C33.2039 27.84 33.4305 27.8267 33.6972 27.8C33.9905 27.7733 34.2572 27.7467 34.4972 27.72V31C34.1505 31.08 33.7639 31.1333 33.3372 31.16C32.9105 31.2133 32.5505 31.24 32.2572 31.24ZM39.3566 31V9.44H42.9966V13.4L42.5966 12.84C43.1032 11.6133 43.8766 10.7067 44.9166 10.12C45.9566 9.50667 47.2232 9.2 48.7166 9.2H50.0366V12.72H48.1566C46.6366 12.72 45.4099 13.2 44.4766 14.16C43.5432 15.0933 43.0766 16.4267 43.0766 18.16V31H39.3566ZM63.5809 31.48C61.5009 31.48 59.6209 31 57.9409 30.04C56.2609 29.0533 54.9276 27.7067 53.9409 26C52.9543 24.2933 52.4609 22.36 52.4609 20.2C52.4609 18.04 52.9409 16.12 53.9009 14.44C54.8876 12.76 56.2209 11.4267 57.9009 10.44C59.5809 9.45333 61.4743 8.96 63.5809 8.96C65.6609 8.96 67.5409 9.45333 69.2209 10.44C70.9009 11.4 72.2209 12.72 73.1809 14.4C74.1676 16.08 74.6609 18.0133 74.6609 20.2C74.6609 22.3867 74.1543 24.3333 73.1409 26.04C72.1276 27.72 70.7809 29.0533 69.1009 30.04C67.4476 31 65.6076 31.48 63.5809 31.48ZM63.5809 27.88C64.9143 27.88 66.1143 27.5467 67.1809 26.88C68.2743 26.2133 69.1276 25.2933 69.7409 24.12C70.3809 22.9467 70.7009 21.64 70.7009 20.2C70.7009 18.7333 70.3809 17.44 69.7409 16.32C69.1276 15.1733 68.2743 14.2667 67.1809 13.6C66.1143 12.9067 64.9143 12.56 63.5809 12.56C62.2209 12.56 60.9943 12.9067 59.9009 13.6C58.8343 14.2667 57.9809 15.1733 57.3409 16.32C56.7009 17.44 56.3809 18.7333 56.3809 20.2C56.3809 21.64 56.7009 22.9467 57.3409 24.12C57.9809 25.2933 58.8343 26.2133 59.9009 26.88C60.9943 27.5467 62.2209 27.88 63.5809 27.88ZM79.5128 31V9.44H83.1528V13.64L82.5528 13.28C83.0861 11.92 83.9395 10.8667 85.1128 10.12C86.3128 9.34667 87.7128 8.96 89.3128 8.96C90.8595 8.96 92.2328 9.30667 93.4328 10C94.6595 10.6933 95.6195 11.6533 96.3128 12.88C97.0328 14.1067 97.3928 15.4933 97.3928 17.04V31H93.6328V18.24C93.6328 17.04 93.4195 16.0267 92.9928 15.2C92.5661 14.3733 91.9528 13.7333 91.1528 13.28C90.3795 12.8 89.4861 12.56 88.4728 12.56C87.4595 12.56 86.5528 12.8 85.7528 13.28C84.9795 13.7333 84.3661 14.3867 83.9128 15.24C83.4595 16.0667 83.2328 17.0667 83.2328 18.24V31H79.5128ZM112.716 31.48C110.609 31.48 108.729 30.9867 107.076 30C105.449 29.0133 104.169 27.6667 103.236 25.96C102.303 24.2533 101.836 22.3333 101.836 20.2C101.836 18.04 102.303 16.12 103.236 14.44C104.169 12.76 105.449 11.4267 107.076 10.44C108.729 9.45333 110.609 8.96 112.716 8.96C114.129 8.96 115.449 9.21333 116.676 9.72C117.903 10.2267 118.983 10.9067 119.916 11.76C120.849 12.6133 121.529 13.6133 121.956 14.76L118.636 16.36C118.129 15.24 117.356 14.3333 116.316 13.64C115.276 12.92 114.076 12.56 112.716 12.56C111.409 12.56 110.223 12.8933 109.156 13.56C108.116 14.2267 107.289 15.1333 106.676 16.28C106.063 17.4267 105.756 18.7467 105.756 20.24C105.756 21.68 106.063 22.9867 106.676 24.16C107.289 25.3067 108.116 26.2133 109.156 26.88C110.223 27.5467 111.409 27.88 112.716 27.88C114.076 27.88 115.276 27.5333 116.316 26.84C117.356 26.12 118.129 25.1733 118.636 24L121.956 25.68C121.529 26.8 120.849 27.8 119.916 28.68C118.983 29.5333 117.903 30.2133 116.676 30.72C115.449 31.2267 114.129 31.48 112.716 31.48ZM137.058 31.48C134.978 31.48 133.098 31 131.418 30.04C129.738 29.0533 128.404 27.7067 127.418 26C126.431 24.2933 125.938 22.36 125.938 20.2C125.938 18.04 126.418 16.12 127.378 14.44C128.364 12.76 129.698 11.4267 131.378 10.44C133.058 9.45333 134.951 8.96 137.058 8.96C139.138 8.96 141.018 9.45333 142.698 10.44C144.378 11.4 145.698 12.72 146.658 14.4C147.644 16.08 148.138 18.0133 148.138 20.2C148.138 22.3867 147.631 24.3333 146.618 26.04C145.604 27.72 144.258 29.0533 142.578 30.04C140.924 31 139.084 31.48 137.058 31.48ZM137.058 27.88C138.391 27.88 139.591 27.5467 140.658 26.88C141.751 26.2133 142.604 25.2933 143.218 24.12C143.858 22.9467 144.178 21.64 144.178 20.2C144.178 18.7333 143.858 17.44 143.218 16.32C142.604 15.1733 141.751 14.2667 140.658 13.6C139.591 12.9067 138.391 12.56 137.058 12.56C135.698 12.56 134.471 12.9067 133.378 13.6C132.311 14.2667 131.458 15.1733 130.818 16.32C130.178 17.44 129.858 18.7333 129.858 20.2C129.858 21.64 130.178 22.9467 130.818 24.12C131.458 25.2933 132.311 26.2133 133.378 26.88C134.471 27.5467 135.698 27.88 137.058 27.88ZM162.789 31.48C160.763 31.48 158.936 30.9867 157.309 30C155.709 29.0133 154.443 27.6667 153.509 25.96C152.576 24.2533 152.109 22.3467 152.109 20.24C152.109 18.08 152.576 16.16 153.509 14.48C154.443 12.7733 155.709 11.4267 157.309 10.44C158.936 9.45333 160.763 8.96 162.789 8.96C164.576 8.96 166.163 9.34667 167.549 10.12C168.936 10.8667 170.029 11.88 170.829 13.16L170.229 14.08V0.719999H173.989V31H170.349V26.4L170.829 27.04C170.083 28.4533 168.989 29.5467 167.549 30.32C166.136 31.0933 164.549 31.48 162.789 31.48ZM163.109 27.88C164.469 27.88 165.683 27.5467 166.749 26.88C167.816 26.2133 168.656 25.3067 169.269 24.16C169.909 22.9867 170.229 21.68 170.229 20.24C170.229 18.7733 169.909 17.4667 169.269 16.32C168.656 15.1467 167.816 14.2267 166.749 13.56C165.683 12.8933 164.469 12.56 163.109 12.56C161.776 12.56 160.563 12.9067 159.469 13.6C158.403 14.2667 157.563 15.1733 156.949 16.32C156.336 17.44 156.029 18.7467 156.029 20.24C156.029 21.68 156.336 22.9867 156.949 24.16C157.563 25.3067 158.403 26.2133 159.469 26.88C160.536 27.5467 161.749 27.88 163.109 27.88ZM189.667 31.48C187.587 31.48 185.734 30.9867 184.107 30C182.481 29.0133 181.201 27.6667 180.267 25.96C179.334 24.2267 178.867 22.2933 178.867 20.16C178.867 18 179.321 16.08 180.227 14.4C181.161 12.72 182.414 11.4 183.987 10.44C185.587 9.45333 187.374 8.96 189.347 8.96C190.947 8.96 192.361 9.25333 193.587 9.84C194.841 10.4 195.894 11.1733 196.747 12.16C197.627 13.12 198.294 14.2267 198.747 15.48C199.227 16.7067 199.467 17.9867 199.467 19.32C199.467 19.6133 199.441 19.9467 199.387 20.32C199.361 20.6667 199.321 21 199.267 21.32H181.587V18.12H197.107L195.347 19.56C195.587 18.1733 195.454 16.9333 194.947 15.84C194.441 14.7467 193.694 13.88 192.707 13.24C191.721 12.6 190.601 12.28 189.347 12.28C188.094 12.28 186.947 12.6 185.907 13.24C184.867 13.88 184.054 14.8 183.467 16C182.907 17.1733 182.681 18.5733 182.787 20.2C182.681 21.7733 182.921 23.16 183.507 24.36C184.121 25.5333 184.974 26.4533 186.067 27.12C187.187 27.76 188.401 28.08 189.707 28.08C191.147 28.08 192.361 27.7467 193.347 27.08C194.334 26.4133 195.134 25.56 195.747 24.52L198.867 26.12C198.441 27.1067 197.774 28.0133 196.867 28.84C195.987 29.64 194.934 30.28 193.707 30.76C192.507 31.24 191.161 31.48 189.667 31.48Z" fill={useColorModeValue('white', 'black')}></path></svg>

            </Box>
        </Flex>

        <Flex flex={{ base: 2, md: 0 }} justify={{ base: '1', md: 'start' }} display={{base: 'none', md: 'flex'}}>
            <Box mt={1}>
           <svg width="170" height="32" viewBox="0 0 200 32" fill="none" xmlns="http://www.w3.org/2000/svg"><path d="M7.2 31.48C5.78667 31.48 4.53333 31.2267 3.44 30.72C2.37333 30.1867 1.53333 29.4667 0.92 28.56C0.306667 27.6267 2.98023e-08 26.56 2.98023e-08 25.36C2.98023e-08 24.2133 0.24 23.1867 0.72 22.28C1.22667 21.3467 2 20.56 3.04 19.92C4.10667 19.28 5.44 18.8267 7.04 18.56L15.04 17.24V20.36L7.88 21.56C6.49333 21.8 5.48 22.24 4.84 22.88C4.22667 23.52 3.92 24.3067 3.92 25.24C3.92 26.12 4.26667 26.8533 4.96 27.44C5.68 28.0267 6.57333 28.32 7.64 28.32C9 28.32 10.1733 28.04 11.16 27.48C12.1733 26.8933 12.96 26.1067 13.52 25.12C14.1067 24.1333 14.4 23.04 14.4 21.84V16.36C14.4 15.1867 13.96 14.24 13.08 13.52C12.2267 12.7733 11.0933 12.4 9.68 12.4C8.45333 12.4 7.36 12.72 6.4 13.36C5.46667 13.9733 4.77333 14.8 4.32 15.84L1.08 14.16C1.48 13.1733 2.12 12.2933 3 11.52C3.88 10.72 4.90667 10.0933 6.08 9.64C7.25333 9.18667 8.48 8.96 9.76 8.96C11.4133 8.96 12.8667 9.28 14.12 9.92C15.3733 10.5333 16.3467 11.4 17.04 12.52C17.76 13.6133 18.12 14.8933 18.12 16.36V31H14.48V26.92L15.16 27.16C14.7067 28.0133 14.0933 28.76 13.32 29.4C12.5467 30.04 11.64 30.5467 10.6 30.92C9.56 31.2933 8.42667 31.48 7.2 31.48ZM32.2572 31.24C30.1505 31.24 28.5239 30.64 27.3772 29.44C26.2572 28.24 25.6972 26.5467 25.6972 24.36V13H21.7772V9.44H22.5772C23.5372 9.44 24.2972 9.14667 24.8572 8.56C25.4172 7.97333 25.6972 7.2 25.6972 6.24V4.48H29.4172V9.44H34.2572V13H29.4172V24.24C29.4172 24.96 29.5239 25.5867 29.7372 26.12C29.9772 26.6533 30.3639 27.08 30.8972 27.4C31.4305 27.6933 32.1372 27.84 33.0172 27.84C33.2039 27.84 33.4305 27.8267 33.6972 27.8C33.9905 27.7733 34.2572 27.7467 34.4972 27.72V31C34.1505 31.08 33.7639 31.1333 33.3372 31.16C32.9105 31.2133 32.5505 31.24 32.2572 31.24ZM39.3566 31V9.44H42.9966V13.4L42.5966 12.84C43.1032 11.6133 43.8766 10.7067 44.9166 10.12C45.9566 9.50667 47.2232 9.2 48.7166 9.2H50.0366V12.72H48.1566C46.6366 12.72 45.4099 13.2 44.4766 14.16C43.5432 15.0933 43.0766 16.4267 43.0766 18.16V31H39.3566ZM63.5809 31.48C61.5009 31.48 59.6209 31 57.9409 30.04C56.2609 29.0533 54.9276 27.7067 53.9409 26C52.9543 24.2933 52.4609 22.36 52.4609 20.2C52.4609 18.04 52.9409 16.12 53.9009 14.44C54.8876 12.76 56.2209 11.4267 57.9009 10.44C59.5809 9.45333 61.4743 8.96 63.5809 8.96C65.6609 8.96 67.5409 9.45333 69.2209 10.44C70.9009 11.4 72.2209 12.72 73.1809 14.4C74.1676 16.08 74.6609 18.0133 74.6609 20.2C74.6609 22.3867 74.1543 24.3333 73.1409 26.04C72.1276 27.72 70.7809 29.0533 69.1009 30.04C67.4476 31 65.6076 31.48 63.5809 31.48ZM63.5809 27.88C64.9143 27.88 66.1143 27.5467 67.1809 26.88C68.2743 26.2133 69.1276 25.2933 69.7409 24.12C70.3809 22.9467 70.7009 21.64 70.7009 20.2C70.7009 18.7333 70.3809 17.44 69.7409 16.32C69.1276 15.1733 68.2743 14.2667 67.1809 13.6C66.1143 12.9067 64.9143 12.56 63.5809 12.56C62.2209 12.56 60.9943 12.9067 59.9009 13.6C58.8343 14.2667 57.9809 15.1733 57.3409 16.32C56.7009 17.44 56.3809 18.7333 56.3809 20.2C56.3809 21.64 56.7009 22.9467 57.3409 24.12C57.9809 25.2933 58.8343 26.2133 59.9009 26.88C60.9943 27.5467 62.2209 27.88 63.5809 27.88ZM79.5128 31V9.44H83.1528V13.64L82.5528 13.28C83.0861 11.92 83.9395 10.8667 85.1128 10.12C86.3128 9.34667 87.7128 8.96 89.3128 8.96C90.8595 8.96 92.2328 9.30667 93.4328 10C94.6595 10.6933 95.6195 11.6533 96.3128 12.88C97.0328 14.1067 97.3928 15.4933 97.3928 17.04V31H93.6328V18.24C93.6328 17.04 93.4195 16.0267 92.9928 15.2C92.5661 14.3733 91.9528 13.7333 91.1528 13.28C90.3795 12.8 89.4861 12.56 88.4728 12.56C87.4595 12.56 86.5528 12.8 85.7528 13.28C84.9795 13.7333 84.3661 14.3867 83.9128 15.24C83.4595 16.0667 83.2328 17.0667 83.2328 18.24V31H79.5128ZM112.716 31.48C110.609 31.48 108.729 30.9867 107.076 30C105.449 29.0133 104.169 27.6667 103.236 25.96C102.303 24.2533 101.836 22.3333 101.836 20.2C101.836 18.04 102.303 16.12 103.236 14.44C104.169 12.76 105.449 11.4267 107.076 10.44C108.729 9.45333 110.609 8.96 112.716 8.96C114.129 8.96 115.449 9.21333 116.676 9.72C117.903 10.2267 118.983 10.9067 119.916 11.76C120.849 12.6133 121.529 13.6133 121.956 14.76L118.636 16.36C118.129 15.24 117.356 14.3333 116.316 13.64C115.276 12.92 114.076 12.56 112.716 12.56C111.409 12.56 110.223 12.8933 109.156 13.56C108.116 14.2267 107.289 15.1333 106.676 16.28C106.063 17.4267 105.756 18.7467 105.756 20.24C105.756 21.68 106.063 22.9867 106.676 24.16C107.289 25.3067 108.116 26.2133 109.156 26.88C110.223 27.5467 111.409 27.88 112.716 27.88C114.076 27.88 115.276 27.5333 116.316 26.84C117.356 26.12 118.129 25.1733 118.636 24L121.956 25.68C121.529 26.8 120.849 27.8 119.916 28.68C118.983 29.5333 117.903 30.2133 116.676 30.72C115.449 31.2267 114.129 31.48 112.716 31.48ZM137.058 31.48C134.978 31.48 133.098 31 131.418 30.04C129.738 29.0533 128.404 27.7067 127.418 26C126.431 24.2933 125.938 22.36 125.938 20.2C125.938 18.04 126.418 16.12 127.378 14.44C128.364 12.76 129.698 11.4267 131.378 10.44C133.058 9.45333 134.951 8.96 137.058 8.96C139.138 8.96 141.018 9.45333 142.698 10.44C144.378 11.4 145.698 12.72 146.658 14.4C147.644 16.08 148.138 18.0133 148.138 20.2C148.138 22.3867 147.631 24.3333 146.618 26.04C145.604 27.72 144.258 29.0533 142.578 30.04C140.924 31 139.084 31.48 137.058 31.48ZM137.058 27.88C138.391 27.88 139.591 27.5467 140.658 26.88C141.751 26.2133 142.604 25.2933 143.218 24.12C143.858 22.9467 144.178 21.64 144.178 20.2C144.178 18.7333 143.858 17.44 143.218 16.32C142.604 15.1733 141.751 14.2667 140.658 13.6C139.591 12.9067 138.391 12.56 137.058 12.56C135.698 12.56 134.471 12.9067 133.378 13.6C132.311 14.2667 131.458 15.1733 130.818 16.32C130.178 17.44 129.858 18.7333 129.858 20.2C129.858 21.64 130.178 22.9467 130.818 24.12C131.458 25.2933 132.311 26.2133 133.378 26.88C134.471 27.5467 135.698 27.88 137.058 27.88ZM162.789 31.48C160.763 31.48 158.936 30.9867 157.309 30C155.709 29.0133 154.443 27.6667 153.509 25.96C152.576 24.2533 152.109 22.3467 152.109 20.24C152.109 18.08 152.576 16.16 153.509 14.48C154.443 12.7733 155.709 11.4267 157.309 10.44C158.936 9.45333 160.763 8.96 162.789 8.96C164.576 8.96 166.163 9.34667 167.549 10.12C168.936 10.8667 170.029 11.88 170.829 13.16L170.229 14.08V0.719999H173.989V31H170.349V26.4L170.829 27.04C170.083 28.4533 168.989 29.5467 167.549 30.32C166.136 31.0933 164.549 31.48 162.789 31.48ZM163.109 27.88C164.469 27.88 165.683 27.5467 166.749 26.88C167.816 26.2133 168.656 25.3067 169.269 24.16C169.909 22.9867 170.229 21.68 170.229 20.24C170.229 18.7733 169.909 17.4667 169.269 16.32C168.656 15.1467 167.816 14.2267 166.749 13.56C165.683 12.8933 164.469 12.56 163.109 12.56C161.776 12.56 160.563 12.9067 159.469 13.6C158.403 14.2667 157.563 15.1733 156.949 16.32C156.336 17.44 156.029 18.7467 156.029 20.24C156.029 21.68 156.336 22.9867 156.949 24.16C157.563 25.3067 158.403 26.2133 159.469 26.88C160.536 27.5467 161.749 27.88 163.109 27.88ZM189.667 31.48C187.587 31.48 185.734 30.9867 184.107 30C182.481 29.0133 181.201 27.6667 180.267 25.96C179.334 24.2267 178.867 22.2933 178.867 20.16C178.867 18 179.321 16.08 180.227 14.4C181.161 12.72 182.414 11.4 183.987 10.44C185.587 9.45333 187.374 8.96 189.347 8.96C190.947 8.96 192.361 9.25333 193.587 9.84C194.841 10.4 195.894 11.1733 196.747 12.16C197.627 13.12 198.294 14.2267 198.747 15.48C199.227 16.7067 199.467 17.9867 199.467 19.32C199.467 19.6133 199.441 19.9467 199.387 20.32C199.361 20.6667 199.321 21 199.267 21.32H181.587V18.12H197.107L195.347 19.56C195.587 18.1733 195.454 16.9333 194.947 15.84C194.441 14.7467 193.694 13.88 192.707 13.24C191.721 12.6 190.601 12.28 189.347 12.28C188.094 12.28 186.947 12.6 185.907 13.24C184.867 13.88 184.054 14.8 183.467 16C182.907 17.1733 182.681 18.5733 182.787 20.2C182.681 21.7733 182.921 23.16 183.507 24.36C184.121 25.5333 184.974 26.4533 186.067 27.12C187.187 27.76 188.401 28.08 189.707 28.08C191.147 28.08 192.361 27.7467 193.347 27.08C194.334 26.4133 195.134 25.56 195.747 24.52L198.867 26.12C198.441 27.1067 197.774 28.0133 196.867 28.84C195.987 29.64 194.934 30.28 193.707 30.76C192.507 31.24 191.161 31.48 189.667 31.48Z" fill={useColorModeValue('white', 'black')}></path></svg>
            </Box>
            

        </Flex>

        <Flex flex={{ base: 2, md: 0 }} justify={{ base: 'end', md: 'start' }} display={{base: 'flex', md: 'none'}}>
            
        <Button onClick={openLanguageModal}  bg="auto" fontWeight={600} _hover={{ cursor: 'pointer'}} 
        color={useColorModeValue('white', 'black')}>
            Select Language
          </Button>

         <Box mt={1}>
          <ColorModeSwitcher justifySelf="flex-end" color={hamburgercolor} _focus={{color: hamburgercolor}} _hover={{color: hamburgercolor, bg: 'transparent'}} />
         </Box>

      <Modal isOpen={languageModalIsOpen} onClose={closeLanguageModal} >
        <ModalOverlay />
        <ModalContent >
          <ModalHeader>Select Language</ModalHeader>
          <ModalCloseButton />
          <ModalBody>
            {/* Add language selection options here */}
            <Box p={2}>
            <Button onClick={closeLanguageModal} bg={languageCode === '' ? 'black' : failBgColor}  color={languageCode == "" ? "white" : "black"}>EN</Button>
            <Button onClick={closeLanguageModal} bg={languageCode === 'de' ? 'black' : failBgColor} color={languageCode == "/" ? "white" : "black"}ml={2}>DE</Button>
            <Button onClick={closeLanguageModal} bg={languageCode === 'fr' ? 'black' : failBgColor} color={languageCode == "/" ? "white" : "black"} ml={2}>FR</Button>
            <Button onClick={closeLanguageModal} bg={languageCode === 'al' ? 'black' : failBgColor} color={languageCode == "/" ? "white" : "black"} ml={2}>AL</Button>
            </Box>
          </ModalBody>
          <ModalFooter>
            <Button onClick={closeLanguageModal}>Cancel</Button>
          </ModalFooter>
        </ModalContent>
      </Modal>

            <IconButton
            _focus={{ color: hamburgercolor}}
            _hover={{bg: 'transparent'}}
            onClick={onToggle}
            icon={isOpen ? <CloseIcon w={3} h={3} color={hamburgercolor} _focus={{color: hamburgercolor}} _hover={{color: hamburgercolor, bg: 'transparent'}} /> : <HamburgerIcon w={5} h={5} color={hamburgercolor} _focus={{color: hamburgercolor}} _hover={{color: hamburgercolor, bg: 'transparent'}} />}
            variant={'ghost'}
            aria-label={'Toggle Navigation'}
          />
            

        </Flex>

        <Stack
          display={{base: 'none', md: 'flex'}}
          flex={{ base: 1, md: 1 }}
          justify={'flex-end'}
          direction={'row'}
          mr={20}
          py={4}
          spacing={6}>
            <DesktopNav />
            
           
          <Text onClick={openLanguageModal} color={useColorModeValue('gray.200, gray.600')} 
          fontWeight={500} _hover={{ cursor: 'pointer'}} fontSize={'md'} fontFamily={'Poppins'} mt={1}>
            Select Language
          </Text>

      <Modal isOpen={languageModalIsOpen} onClose={closeLanguageModal} >
        <ModalOverlay />
        <ModalContent bg={useColorModeValue('gray.900', 'gray.50')}>
          <ModalHeader color={useColorModeValue('white', 'black')}>Select Language</ModalHeader>
          <ModalCloseButton color={useColorModeValue('white', 'black')} />
          <ModalBody >
            <Box p={2} >
            <Button onClick={closeLanguageModal} bg={languageCode === '' ? successBgColor : undefined}  color={languageCode == "" ? successTextColor : failTextColor}>EN</Button>
            <Button onClick={closeLanguageModal} bg={languageCode === 'de' ? successBgColor : undefined}  color={languageCode == "de" ? successTextColor : failTextColor} ml={2}>DE</Button>
            <Button onClick={closeLanguageModal} bg={languageCode === 'fr' ? successBgColor  : undefined} color={languageCode == "fr" ? successTextColor : failTextColor} ml={2}>FR</Button>
            <Button onClick={closeLanguageModal} bg={languageCode === 'al' ? successBgColor  : undefined} color={languageCode == "al" ? successTextColor : failTextColor} ml={2}>AL</Button>
            </Box>
          </ModalBody>
          <ModalFooter>
            <Button onClick={closeLanguageModal} bg={useColorModeValue('white', 'black')} _hover={{bg: useColorModeValue('white', 'black')}}>Cancel</Button>
          </ModalFooter>
        </ModalContent>
      </Modal>


      <ColorModeSwitcher justifySelf="flex-end" color={hamburgercolor} _focus={{color: hamburgercolor}} _hover={{color: hamburgercolor, bg: 'transparent'}}/>


        </Stack>
      </Flex>

      

      <Collapse in={isOpen} animateOpacity>
        <MobileNav />
      </Collapse>

      



    </Box>
  )
}

const DesktopNav = () => {
  const linkColor = useColorModeValue('gray.200', 'gray.600')
  const linkHoverColor = useColorModeValue('white', 'gray.800')
  const popoverContentBgColor = useColorModeValue('gray.800', 'white')

  return (
    <Stack direction={'row'} spacing={4}>
      {NAV_ITEMS.map((navItem) => (
        <Box key={navItem.label}>
          <Popover trigger={'hover'} placement={'bottom-start'}>
            <PopoverTrigger>
              <Box
                as="a"
                p={0}
                href={navItem.href ?? '#'}
                fontSize={'md'}
                fontWeight={500}
                color={linkColor}
                fontFamily={'Poppins'}
                _hover={{
                  textDecoration: 'none',
                  color: linkHoverColor,
                }}>
                <Text mt={1}>
                  {navItem.label}
                </Text>
              </Box>
            </PopoverTrigger>

            {navItem.children && (
              <PopoverContent
                border={0}
                boxShadow={'xl'}
                bg={popoverContentBgColor}
                p={4}
                rounded={'xl'}
                minW={'sm'}>
                <Stack>
                  {navItem.children.map((child) => (
                    <DesktopSubNav key={child.label} {...child} />
                  ))}
                </Stack>
              </PopoverContent>
            )}
          </Popover>
        </Box>
      ))}
    </Stack>
  )
}

const DesktopSubNav = ({ label, href, subLabel }) => {
  return (
    <Box
      as="a"
      href={href}
      role={'group'}
      display={'block'}
      p={2}
      rounded={'md'}
      _hover={{ bg: useColorModeValue('gray.900', 'pink.50') }}>
      <Stack direction={'row'} align={'center'}>
        <Box>
          <Text
            transition={'all .3s ease'}
            _groupHover={{ color: 'pink.400' }}
            fontWeight={500}>
            {label}
          </Text>
          <Text fontSize={'sm'}>{subLabel}</Text>
        </Box>
        <Flex
          transition={'all .3s ease'}
          transform={'translateX(-10px)'}
          opacity={0}
          _groupHover={{ opacity: '100%', transform: 'translateX(0)' }}
          justify={'flex-end'}
          align={'center'}
          flex={1}>
          <Icon color={'pink.400'} w={5} h={5} as={ChevronRightIcon} />
        </Flex>
      </Stack>
    </Box>
  )
}

const MobileNav = () => {
  return (
    <Stack bg={useColorModeValue('gray.900', 'transparent')} p={4} display={{ md: 'none' }} minH={'100vh'}>
      {NAV_ITEMS.map((navItem) => (
        <MobileNavItem key={navItem.label} {...navItem} />
      ))}
    </Stack>
  )
}

const MobileNavItem = ({ label, children, href }) => {
  const { isOpen, onToggle } = useDisclosure()

  const colorChildrens = useColorModeValue('white', 'black');
  return (
    <Stack spacing={4} onClick={children && onToggle}>
      <Box
        py={2}
        as="a"
        href={href ?? '#'}
        justifyContent="space-between"
        alignItems="center"
        _hover={{
          textDecoration: 'none',
        }}>
        <Text fontWeight={400} color={useColorModeValue('gray.200', 'gray.800')} fontSize={'2xl'} fontFamily={'Poppins'} pt={5}>
          {label}
        
        {children && (
          <Icon
            as={ChevronDownIcon}
            transition={'all .25s ease-in-out'}
            transform={isOpen ? 'rotate(180deg)' : ''}
            w={6}
            h={6}
          />
        )}
        </Text>
        
      </Box>

      <Collapse in={isOpen} animateOpacity style={{ marginTop: '0!important' }}>
        <Stack
          mt={2}
          pl={4}
          borderLeft={0}
          borderStyle={'solid'}
          borderColor={useColorModeValue('gray.200', 'gray.700')}
          align={'start'}>
          {children &&
            children.map((child) => (
              <Box as="a" key={child.label} py={2} href={child.href} color={colorChildrens} fontFamily={'Poppins'} fontWeight={500}>
                {child.label}
              </Box>
            ))}
        </Stack>
      </Collapse>
    </Stack>
  )
}



const NAV_ITEMS = [
    {
      label: 'Home',
      href: '/',
    },
    {
      label: 'Services',
      children: [
        {
          label: 'Web Development',
          href: '/web-development',
        },
        {
          label: 'E-Commerce',
          href: '/e-commerce',
        },
        {
            label: 'Mobile Development',
            href: 'mobile-development',
        },
        {
            label: 'UI/UX Design',
            href: '/ui-ux',
        },
      ],
    },
    {
      label: 'About',
      href: '/about',
    },
    {
      label: 'Contact',
      href: '/contact',
    },
  ];
